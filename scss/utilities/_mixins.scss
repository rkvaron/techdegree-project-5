// ==========================================================================
// MIXINS styles
// ==========================================================================

// Set bg-colors in elements
@mixin bg-colors($map) {
  @each $theme, $color in $map {
    &--#{$theme} {
      background-color: $color;
    }
  }
}

//Media query mixin
@mixin mq($break) {
  @if $break == 'small' {
    @media (min-width: $brkpoint--sm) and (max-width: $breakpoint--md) {
      @context;
    }
  }
  @if $break == 'medium' {
    @media (min-width: $brkpoint--md + 1) {
      @content;
    }
  }
  @else if $break == 'large' {
    @media (min-width: $brkpoint--lg) {
      @content;
    }
  }
  @else {
    @error "No value could be retrieved for `#{$break}`. "
  }
}

//Grid columns
@mixin g-columns {
  @for $i from 1 through $g-col-count {
    $context: g-context($g-col-width, $g-col-count, $g-gutter-width);
    $target: ($g-col-width * $i) + ($g-gutter-width * ($i - 1));

    //generat column modifier classes
    &--#{$i} {
      width: percentage($target/$context);
    }
  }
}
