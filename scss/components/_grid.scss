// ==========================================================================
// GRID styles
// ==========================================================================


.container {
  	@extend %clearfix;
  	@extend %center;
  	width: 85%;

  	// Make nested grid container 100%
  	[class*="grid__col--"] > & {
  		width: 100%;
  	}

  	// Set max-width for grid container
  	@include mq(large) {
  		max-width: $g-cont-max-w;
  	}
  }

.grid {
    @include e(row){
      display: flex;
      flex-direction: column;

      margin-top: 1em;
      margin-bottom: 2em;
      @extend %clearfix;

      @include mq(medium){
        flex-direction: row;

      }
    }
    //generates grid column width percentages & creates grid classes
    @include e(col) {
      @include mq(medium){
          @include g-columns;
        }
    }
}

[class^="grid__col--"] {
  @include mq(medium) {
    @include doubly(percentage($g-gutter-width / $context));
    float: left;
    min-height: 1px;
    padding-left: 10px;
    padding-right: 10px;
    &:last-of-type {
      float: right;
    }
  }
}

.theme__poly {
	.grid [class*="grid__col"] {
  	font-weight: $font-weight--thin;
		margin-bottom: em(16px);

	}
}
[class*="theme__colors"] {
  @extend %theme;

}

@each $value, $color in $circles-grid {
	.#{$value}.theme__colors {
		background-color: $color;
    color: $grey;
      @include mq(medium){
          text-align: center;
          &.centered {
            margin-left: auto;
            margin-right: auto;
          }
      }

	}
}

.centered {
  @extend %center;
}
